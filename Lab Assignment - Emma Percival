{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5213f764-80fa-49d4-8aeb-123c1198404a",
   "metadata": {},
   "source": [
    "# **Lab Assignment - Emma Percival**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6860dd8-d5f2-445b-83e0-f48e28f5290e",
   "metadata": {},
   "source": [
    "## 200012588"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e28d525-61d7-4c9b-b371-8abfa9bbe72f",
   "metadata": {},
   "source": [
    "### https://github.com/elpercival7/PY4SA_Assignment "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "229ced00-f07b-4a59-933c-7ad73ec3dc58",
   "metadata": {},
   "source": [
    "### **Task 1**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01a1367e-7ddc-4ec7-b2ee-6c710c8b7496",
   "metadata": {},
   "source": [
    "#### Creating a code to perform an 'if...else' statement which tests whether a number is divisible by three."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "50d83011-74cc-44a3-8f75-3393487fba78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15 is divisible by three\n"
     ]
    }
   ],
   "source": [
    "x = 15\n",
    "if x/3: \n",
    "    print(str(x) + \" is divisible by three\")\n",
    "    \n",
    "else: \n",
    "    print(str(x) + \" is not divisible by three\") "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "beb77a92-e55f-4f2d-ac87-f8e0c7b3326d",
   "metadata": {},
   "source": [
    "### **Task 2**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba46e351-fa34-4b9f-8126-a26a54827770",
   "metadata": {},
   "source": [
    "#### Creating a code to perform an 'if...else' statement which tests whether a type of fruit is in a list of acceptable fruits."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "70b890a9-49fa-4806-b365-565edef6f414",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pear is acceptable\n",
      "pear is acceptable\n",
      "pear is acceptable\n",
      "pear is acceptable\n",
      "pear is acceptable\n"
     ]
    }
   ],
   "source": [
    "lst1 = ['apple', 'orange', 'pear', 'kiwi', 'strawberry']\n",
    "\n",
    "x = 'pear'\n",
    "\n",
    "for x in lst1:\n",
    "    if x in lst1:\n",
    "        print (\"pear is acceptable\")\n",
    "    \n",
    "    else:\n",
    "        print (\"pear is not acceptable\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b5bf2ca-ebbf-4a79-ba06-caf222cc3f89",
   "metadata": {},
   "source": [
    "### **Task 3**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b5087bb-d8e2-40e6-ab2e-2bc8a923237b",
   "metadata": {},
   "source": [
    "#### Creating a function to calculate distance between two coordinates using the Haversine formula.\n",
    "We are calculating the distance between Edinburgh and St Andrews (as the crow flies).The result will be given in kilometers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "667cd410-d0f7-4a07-b5a4-170e0e477e8b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import haversine as hs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "76da3b2b-25ac-4be1-a450-d9fca6369b53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "49.34978153154274"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lst1=(55.9533,3.1883)\n",
    "lst2=(56.3398,2.7967)\n",
    "hs.haversine(lst1,lst2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e4a18df-8fdb-45ce-91e2-95a958765db6",
   "metadata": {},
   "source": [
    "Therefore the distance between Edinburgh and St Andrews (as the crow flies) is 49.35km."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e78f025-de7b-481f-bcc9-d8452832a68e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
