{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5213f764-80fa-49d4-8aeb-123c1198404a",
   "metadata": {},
   "source": [
    "# **Lab Assignment - Emma Percival**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6860dd8-d5f2-445b-83e0-f48e28f5290e",
   "metadata": {},
   "source": [
    "## 200012588"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e28d525-61d7-4c9b-b371-8abfa9bbe72f",
   "metadata": {},
   "source": [
    "### https://github.com/elpercival7/PY4SA_Assignment "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "229ced00-f07b-4a59-933c-7ad73ec3dc58",
   "metadata": {},
   "source": [
    "### **Task 1**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01a1367e-7ddc-4ec7-b2ee-6c710c8b7496",
   "metadata": {},
   "source": [
    "#### Creating a code to perform an 'if...else' statement which tests whether a number is divisible by three."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "50d83011-74cc-44a3-8f75-3393487fba78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15 is divisible by three\n"
     ]
    }
   ],
   "source": [
    "x = 15\n",
    "if x/3: \n",
    "    print(str(x) + \" is divisible by three\")\n",
    "    \n",
    "else: \n",
    "    print(str(x) + \" is not divisible by three\") "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "beb77a92-e55f-4f2d-ac87-f8e0c7b3326d",
   "metadata": {},
   "source": [
    "### **Task 2**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba46e351-fa34-4b9f-8126-a26a54827770",
   "metadata": {},
   "source": [
    "#### Creating a code to perform an 'if...else' statement which tests whether a type of fruit is in a list of acceptable fruits."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "70b890a9-49fa-4806-b365-565edef6f414",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pear is acceptable\n",
      "pear is acceptable\n",
      "pear is acceptable\n",
      "pear is acceptable\n",
      "pear is acceptable\n"
     ]
    }
   ],
   "source": [
    "lst1 = ['apple', 'orange', 'pear', 'kiwi', 'strawberry']\n",
    "\n",
    "x = 'pear'\n",
    "\n",
    "for x in lst1:\n",
    "    if x in lst1:\n",
    "        print (\"pear is acceptable\")\n",
    "    \n",
    "    else:\n",
    "        print (\"pear is not acceptable\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b5bf2ca-ebbf-4a79-ba06-caf222cc3f89",
   "metadata": {},
   "source": [
    "### **Task 3**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b5087bb-d8e2-40e6-ab2e-2bc8a923237b",
   "metadata": {},
   "source": [
    "#### Creating a function to calculate distance between two coordinates using the Haversine formula."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ba436ef0-5308-4abd-95a0-34c607a13489",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
